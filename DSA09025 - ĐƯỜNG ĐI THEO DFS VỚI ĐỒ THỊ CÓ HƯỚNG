#include <bits/stdc++.h>
using namespace std;

vector<int> adj[10000];
int visited[10000];
queue<int> qe;
int parent[10000];
int n,m;

void dfs (int i) {
	visited[i] = 1;
	for (auto x : adj[i]) {
		if (visited[x] == 0) {
			parent[x] = i;
			dfs(x);
		}
	}
}

void path(int s, int t) {
	memset(visited, 0, sizeof(visited));
	memset(parent, 0, sizeof(parent));
	dfs(s);
	vector<int> pa;
	if (visited[t] == 0) {
		cout << "-1";
	} else {
		while (t != s) {
			pa.push_back(t);
			t = parent[t];
		}
		pa.push_back(s);
		reverse(pa.begin(), pa.end());
		for (auto x : pa) {
			cout << x << " ";
		}
	}
	cout << endl;
}

int main () {
	int t;
	cin >> t;
	while(t--) {
		int p,q;
		cin >> n >> m >> p >> q;
		for (int i = 1; i <= m; i++) {
			int x,y;
			cin >> x >> y;
			adj[x].push_back(y);
			//adj[y].push_back(x);
		}
		path(p, q);
		for (int i = 1; i <= n; i++) {
			adj[i].clear();
		}
	}
}
